{"contractName":"PayingProxy","abi":[{"inputs":[{"internalType":"address","name":"_masterCopy","type":"address"},{"internalType":"bytes","name":"initializer","type":"bytes"},{"internalType":"address payable","name":"funder","type":"address"},{"internalType":"address","name":"paymentToken","type":"address"},{"internalType":"uint256","name":"payment","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"payable":true,"stateMutability":"payable","type":"fallback"}],"metadata":"{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_masterCopy\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"initializer\",\"type\":\"bytes\"},{\"internalType\":\"address payable\",\"name\":\"funder\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"paymentToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"payment\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}],\"devdoc\":{\"author\":\"Stefan George - <stefan@gnosis.pm>Richard Meissner - <richard@gnosis.pm>\",\"methods\":{\"constructor\":{\"details\":\"Constructor function sets address of master copy contract.\",\"params\":{\"_masterCopy\":\"Master copy address.\",\"funder\":\"Address that should be paid for the execution of this call\",\"initializer\":\"Data used for a delegate call to initialize the contract.\",\"payment\":\"Value that should be paid\",\"paymentToken\":\"Token that should be used for the payment (0 is ETH)\"}}},\"title\":\"Paying Proxy - Generic proxy contract allows to execute all transactions applying the code of a master contract. It is possible to send along initialization data with the constructor. And sends funds after creation to a specified account.\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/mnt/d/Richard/Projects/safe-contracts/contracts/proxies/PayingProxy.sol\":\"PayingProxy\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/mnt/d/Richard/Projects/safe-contracts/contracts/common/SecuredTokenTransfer.sol\":{\"keccak256\":\"0xefb71775825579db9bab375c4e620deaf266b00a3e8c49ba382551c1dc3b66e9\",\"urls\":[\"bzz-raw://4c57d5ba7c81d72c0e537e68bc957c7429110447dc307f2a4b054594d1068603\",\"dweb:/ipfs/QmeEYz4hKpfpHLU8D1BDutWa1ZBav2idBfhWxtXZtrb8Vp\"]},\"/mnt/d/Richard/Projects/safe-contracts/contracts/proxies/DelegateConstructorProxy.sol\":{\"keccak256\":\"0xad2c588d4803f6b9d405c24f436631c8151f93493bbf9d36224437e8a9743e95\",\"urls\":[\"bzz-raw://f02378720fbe4a1c58c25c99c5f94b54cfb43da33806af51f7995a2ce3d04c04\",\"dweb:/ipfs/QmWM7e1Soexnc2dZDZFPymnphSgDS9UXcoyrcdp3viU1HM\"]},\"/mnt/d/Richard/Projects/safe-contracts/contracts/proxies/GnosisSafeProxy.sol\":{\"keccak256\":\"0x8ee43b4e36cdb2798fe1ca82c6a2f5b1f5d557db07ce37862836926e0af8b931\",\"urls\":[\"bzz-raw://c2af627ea73c295292eeef084421dff9b64e014b10ffe5802af9f5cbadcd068b\",\"dweb:/ipfs/QmYvwyqXx7Qh9KtXxDSk91f4BzWetHq6Hexn3mj16FiPhu\"]},\"/mnt/d/Richard/Projects/safe-contracts/contracts/proxies/PayingProxy.sol\":{\"keccak256\":\"0x19efb63d24bee7581cc5a5e0964e609bbccaac68d01e46232db987f9cc32ac45\",\"urls\":[\"bzz-raw://a69555d8b995908be107bc3ba099fbba95bc123868de738a2dd9cfa3c26689f9\",\"dweb:/ipfs/QmWVaqVFtNHFgKZN9ssdRkzHuuwXQLZsYEeahiYJMoEtFB\"]}},\"version\":1}","bytecode":"0x608060405234801561001057600080fd5b506040516105b73803806105b7833981810160405260a081101561003357600080fd5b81019080805190602001909291908051604051939291908464010000000082111561005d57600080fd5b8382019150602082018581111561007357600080fd5b825186600182028301116401000000008211171561009057600080fd5b8083526020830192505050908051906020019080838360005b838110156100c45780820151818401526020810190506100a9565b50505050905090810190601f1680156100f15780820380516001836020036101000a031916815260200191505b50604052602001805190602001909291908051906020019092919080519060200190929190505050848481600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156101a2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806105936024913960400191505060405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505060008151111561022f5773ffffffffffffffffffffffffffffffffffffffff60005416600080835160208501846127105a03f46040513d6000823e600082141561022b573d81fd5b5050505b5050600081111561036657600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156102fe578273ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050506102f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806105476026913960400191505060405180910390fd5b610365565b61030f82848361037060201b60201c565b610364576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602681526020018061056d6026913960400191505060405180910390fd5b5b5b505050505061048f565b600060608383604051602401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001925050506040516020818303038152906040527fa9059cbb000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090506000808251602084016000896127105a03f16040513d81016040523d6000823e3d60008114610472576020811461047a5760009450610484565b829450610484565b8151158315171594505b505050509392505050565b60aa8061049d6000396000f3fe608060405273ffffffffffffffffffffffffffffffffffffffff600054167fa619486e0000000000000000000000000000000000000000000000000000000060003514156050578060005260206000f35b3660008037600080366000845af43d6000803e60008114156070573d6000fd5b3d6000f3fea265627a7a72315820e549fe71c7a324d949d6a51eca2d81556da7edae250ee9893d5f760f2fb7bb6464736f6c63430005100032436f756c64206e6f74207061792073616665206372656174696f6e2077697468206574686572436f756c64206e6f74207061792073616665206372656174696f6e207769746820746f6b656e496e76616c6964206d617374657220636f707920616464726573732070726f7669646564","deployedBytecode":"0x608060405273ffffffffffffffffffffffffffffffffffffffff600054167fa619486e0000000000000000000000000000000000000000000000000000000060003514156050578060005260206000f35b3660008037600080366000845af43d6000803e60008114156070573d6000fd5b3d6000f3fea265627a7a72315820e549fe71c7a324d949d6a51eca2d81556da7edae250ee9893d5f760f2fb7bb6464736f6c63430005100032","sourceMap":"467:1085:32:-;;;961:589;8:9:-1;5:2;;;30:1;27;20:12;5:2;961:589:32;;;;;;;;;;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;961:589:32;;;;;;;;;;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;330:9;325:1;311:12;307:20;289:16;285:43;282:58;261:11;247:12;244:29;233:115;230:2;;;361:1;358;351:12;230:2;384:12;379:3;372:25;420:4;415:3;411:14;404:21;;0:432;;961:589:32;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;961:589:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1116:11;1129;713::28;1005:1:29;982:25;;:11;:25;;;;974:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1071:11;1058:10;;:24;;;;;;;;;;;;;;;;;;912:177;780:1:28;759:11;:18;:22;755:523;;;924:42;920:1;914:8;910:57;1088:1;1085;1071:11;1065:18;1058:4;1045:11;1041:22;1029:10;1021:5;1016:3;1012:15;999:91;1124:4;1118:11;1169:16;1166:1;1161:3;1146:40;1218:1;1209:7;1206:14;1203:2;;;1235:16;1230:3;1223:29;1203:2;874:394;;;;638:646;;1185:1:32;1175:7;:11;1171:373;;;1230:1;1206:26;;:12;:26;;;1202:332;;;1322:6;:11;;:20;1334:7;1322:20;;;;;;;;;;;;;;;;;;;;;;;1314:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1202:332;;;1432:44;1446:12;1460:6;1468:7;1432:13;;;:44;;:::i;:::-;1424:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1202:332;1171:373;961:589;;;;;467:1085;;438:807:10;575:16;607:17;680:8;690:6;627:70;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;627:70:10;;;;;;;38:4:-1;29:7;25:18;67:10;61:17;96:58;199:8;192:4;186;182:15;179:29;167:10;160:49;0:215;;;627:70:10;607:90;;874:1;871;864:4;858:11;851:4;845;841:15;838:1;831:5;823;818:3;814:15;809:67;906:4;900:11;946:16;941:3;937:26;931:4;924:40;1000:16;997:1;992:3;977:40;1037:16;1071:1;1066:33;;;;1117:4;1112:76;;;;1226:1;1211:16;;1030:199;;1066:33;1090:7;1075:22;;1066:33;;1112:76;1179:3;1173:10;1166:18;1156:7;1149:15;1146:39;1139:47;1124:62;;1030:199;;780:459;;;;;;;;:::o;467:1085:32:-;;;;;;;","deployedSourceMap":"467:1085:32:-;;;1368:42:29;1364:1;1358:8;1354:57;1546:66;1542:1;1529:15;1526:87;1523:2;;;1642:10;1639:1;1632:21;1680:4;1677:1;1670:15;1523:2;1731:14;1728:1;1725;1712:34;1826:1;1823;1807:14;1804:1;1792:10;1787:3;1774:54;1862:16;1859:1;1856;1841:38;1907:1;1898:7;1895:14;1892:2;;;1922:16;1919:1;1912:27;1892:2;1964:16;1961:1;1954:27","source":"pragma solidity >=0.5.0 <0.7.0;\nimport \"../common/SecuredTokenTransfer.sol\";\nimport \"./DelegateConstructorProxy.sol\";\n\n/// @title Paying Proxy - Generic proxy contract allows to execute all transactions applying the code of a master contract. It is possible to send along initialization data with the constructor. And sends funds after creation to a specified account.\n/// @author Stefan George - <stefan@gnosis.pm>\n/// @author Richard Meissner - <richard@gnosis.pm>\ncontract PayingProxy is DelegateConstructorProxy, SecuredTokenTransfer {\n\n    /// @dev Constructor function sets address of master copy contract.\n    /// @param _masterCopy Master copy address.\n    /// @param initializer Data used for a delegate call to initialize the contract.\n    /// @param funder Address that should be paid for the execution of this call\n    /// @param paymentToken Token that should be used for the payment (0 is ETH)\n    /// @param payment Value that should be paid\n    constructor(address _masterCopy, bytes memory initializer, address payable funder, address paymentToken, uint256 payment)\n        DelegateConstructorProxy(_masterCopy, initializer)\n        public\n    {\n        if (payment > 0) {\n            if (paymentToken == address(0)) {\n                 // solium-disable-next-line security/no-send\n                require(funder.send(payment), \"Could not pay safe creation with ether\");\n            } else {\n                require(transferToken(paymentToken, funder, payment), \"Could not pay safe creation with token\");\n            }\n        }\n    }\n}\n","compiler":{"name":"solc","version":"0.5.16+commit.9c3226ce.Emscripten.clang"},"networks":{},"schemaVersion":"3.1.0","updatedAt":"2020-04-20T14:11:17.989Z","devdoc":{"author":"Stefan George - <stefan@gnosis.pm>Richard Meissner - <richard@gnosis.pm>","methods":{"constructor":{"details":"Constructor function sets address of master copy contract.","params":{"_masterCopy":"Master copy address.","funder":"Address that should be paid for the execution of this call","initializer":"Data used for a delegate call to initialize the contract.","payment":"Value that should be paid","paymentToken":"Token that should be used for the payment (0 is ETH)"}}},"title":"Paying Proxy - Generic proxy contract allows to execute all transactions applying the code of a master contract. It is possible to send along initialization data with the constructor. And sends funds after creation to a specified account."},"userdoc":{"methods":{}}}